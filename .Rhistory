axis.title=element_text(size=28),
legend.text=element_text(size=28)+geom_text(size = 28),
legend.position = "bottom",legend.key.size = unit(3.5, 'cm'))+
guides(color = guide_legend(nrow =1))
#Repeat for higher death rate (mu = 0.125)
second_ovr_resulting_gamma_dt <- subset(ovr_resulting_gamma_dt, IND %in% c(4, 5, 6))
second_ovr_tmp <- subset(ovr_intersection_dt, IND %in% c(4, 5, 6))
#Just extract r values
rt_seq <- unique(second_ovr_tmp[which(!is.infinite(x))]$x)
rt_1 <- rt_seq[1]
rt_2 <- rt_seq[2]
rt_3 <- rt_seq[3]
#Just extract R_0 values
Rt_dt <- unique(subset(second_ovr_resulting_gamma_dt, gamma == 0 & IND %in% c(4, 5, 6)))
Rt_seq <- Rt_dt$phi #R_0
second_ovr_resulting_gamma_dt[, IND:= factor(IND)]
second_R_r_plot <- ggplot(second_ovr_resulting_gamma_dt)+
geom_line(aes(x = gamma, y = phi, color = IND),
linewidth = 1.4)+
theme_bw()+
geom_line(data = second_ovr_tmp,
aes(x = x, y = y, color = IND),
linetype = 2,
linewidth = 1.4,
alpha = 0.4)+
geom_point(data= Rt_dt, aes(x = gamma, y = phi, color = IND),
size = 5)+
geom_point(data= Rt_dt, aes(x = r, y = gamma, color = IND),
size = 5)+
#Add r and R labels
annotate("text", x = rt_1, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[1], fontface = 3, vjust = -0.12)+
annotate("text", x = rt_2, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[2], fontface = 3, vjust = -0.12)+
annotate("text", x = rt_3, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[3], fontface = 3, vjust = -0.12)+
annotate("text", y = Rt_seq[1]+ 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[1], fontface = 3, vjust = -0.1)+
annotate("text", y = Rt_seq[2] + 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[2], fontface = 3, vjust = -0.1)+
annotate("text", y = Rt_seq[3]+ 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[3], fontface = 3, vjust = -0.1)+
labs(x = expression(gamma),
y = expression(phi ~ "(" * gamma ~ ")"))+
scale_color_manual(values = c("1" = green_pal[1],
"2" = green_pal[2],
"3" = green_pal[3]),
labels = labels)+
geom_hline(yintercept = 0, linetype = "solid", color = "black") +  # Add horizontal line at y=0
geom_vline(xintercept = 0, linetype = "solid", color = "black") +  # Add vertical line at x=0+
scale_y_continuous(limits = c(0,5.1), expand = c(0, 0),
breaks = seq(0, 5.0, by = 1.0),
labels = label_number(accuracy = 0.1)) +
annotate("text", x = 1.25, 4.0, size = 11, label = expression(mu ~ "= 0.125"),
color = "darkblue", fontface = 3)+
theme(text = element_text(size = 28),
axis.text.x = element_text(size=28),
axis.text.y = element_text(size=28),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
legend.title = element_blank(),
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_blank(),
axis.title=element_text(size=28),
legend.text=element_text(size=28)+geom_text(size = 28),
legend.position = "bottom",legend.key.size = unit(3.5, 'cm'))+
guides(color = guide_legend(nrow =1))
top_panel_plot <- ggarrange(plotlist = list(NULL, NULL,
first_R_r_plot,
second_R_r_plot),
common.legend = TRUE,
legend = "bottom",
labels = c("(A)", "(B)", "", ""),
heights = c(0.1, 0.95),
font.label = list(size = 34, face = "bold"),
nrow = 2, ncol = 2)
return(top_panel_plot)
}
library(targets)
library(tarchetypes)
tar_option_set(packages = c("readr", "dplyr", "ggplot2",
"stats", "pracma", "data.table",
"tidyverse", "gridExtra", "ggpubr",
"scales", "RColorBrewer"),
format = "rds")
tar_source()
#Data = fortaleza, sao jao, singapore, fortaleza, simulated
list(
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal))
)
tar_make()
process_and_plot_R_r_relationship
process_and_plot_R_r_relationship <- function(ovr_resulting_gamma_dt,
green_pal){
#Function for processing R-r results and plotting
#Future generalisations are possible here
#Set up data.table for drawing horizontal + vertical
# lines that intersect phi(gamma) to derive r as unique
# root of phi(gamma) = 1
intersection_dt <- unique(subset(ovr_resulting_gamma_dt,
select = c("r", "IND")))
setkeyv(intersection_dt, "IND")
ovr_intersection_dt <- NULL
for(i in 1:nrow(intersection_dt)){
tmp_intersection_dt <- data.table(x = c(-Inf, intersection_dt$r[i], intersection_dt$r[i]),
y = c(1, 1, 0))
tmp_intersection_dt[, IND:= factor(i)] #For colour scheme
ovr_intersection_dt <- rbind(ovr_intersection_dt, tmp_intersection_dt)
}
#Figure 1 (A)
first_ovr_resulting_gamma_dt <- subset(ovr_resulting_gamma_dt, IND %in% c(1, 2, 3))
first_ovr_tmp <- subset(ovr_intersection_dt, IND %in% c(1, 2, 3))
#Just extract r values
rt_seq <- unique(first_ovr_tmp[which(!is.infinite(x))]$x)
rt_1 <- rt_seq[1]
rt_2 <- rt_seq[2]
rt_3 <- rt_seq[3]
#Just extract R_0 values
Rt_dt <- unique(subset(first_ovr_resulting_gamma_dt, gamma == 0 & IND %in% c(1, 2, 3)))
Rt_seq <- Rt_dt$phi #R_0
labels <- c("1" = expression(lambda["E"] ~ "= 0.5" * ", "* lambda["M"] ~ "= 0.5"),
"2" = expression(lambda["E"] ~ "= 0.75" * ", "* lambda["M"] ~ "= 0.75"),
"3" = expression(lambda["E"] ~ "= 1.0" * ", "* lambda["M"] ~ "= 1.0"))
first_ovr_resulting_gamma_dt[, IND:= factor(IND)]
first_R_r_plot <- ggplot(first_ovr_resulting_gamma_dt)+
geom_line(aes(x = gamma, y = phi, color = IND),
linewidth = 1.4)+
theme_bw()+
geom_line(data = first_ovr_tmp,
aes(x = x, y = y, color = IND),
linetype = 2,
linewidth = 1.4,
alpha = 0.4)+
geom_point(data= Rt_dt, aes(x = gamma, y = phi, color = IND),
size = 5)+
geom_point(data= Rt_dt, aes(x = r, y = gamma, color = IND),
size = 5)+
#Add r and R labels
annotate("text", x = rt_1, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[1], fontface = 3, vjust = -0.12)+
annotate("text", x = rt_2, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[2], fontface = 3, vjust = -0.12)+
annotate("text", x = rt_3, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[3], fontface = 3, vjust = -0.12)+
annotate("text", y = Rt_seq[1]+ 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[1], fontface = 3, vjust = -0.1)+
annotate("text", y = Rt_seq[2] + 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[2], fontface = 3, vjust = -0.1)+
annotate("text", y = Rt_seq[3]+ 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[3], fontface = 3, vjust = -0.1)+
labs(x = expression(gamma),
y = expression(phi ~ "(" * gamma ~ ")"))+
scale_color_manual(values = c("1" = green_pal[1],
"2" = green_pal[2],
"3" = green_pal[3]),
labels = labels)+
geom_hline(yintercept = 0, linetype = "solid", color = "black") +  # Add horizontal line at y=0
geom_vline(xintercept = 0, linetype = "solid", color = "black") +  # Add vertical line at x=0+
scale_y_continuous(limits = c(0,5.1), expand = c(0, 0),
breaks = seq(0, 5.0, by = 1.0),
labels = label_number(accuracy = 0.1)) +
annotate("text", x = 1.25, 4.0, size = 11, label = expression(mu ~ "= 0.025"),
color = "darkblue", fontface = 3)+
theme(text = element_text(size = 28),
axis.text.x = element_text(size=28),
axis.text.y = element_text(size=28),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
legend.title = element_blank(),
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_blank(),
axis.title=element_text(size=28),
legend.text=element_text(size=28)+geom_text(size = 28),
legend.position = "bottom",legend.key.size = unit(3.5, 'cm'))+
guides(color = guide_legend(nrow =1))
#Repeat for higher death rate (mu = 0.125)
second_ovr_resulting_gamma_dt <- subset(ovr_resulting_gamma_dt, IND %in% c(4, 5, 6))
second_ovr_tmp <- subset(ovr_intersection_dt, IND %in% c(4, 5, 6))
#Just extract r values
rt_seq <- unique(second_ovr_tmp[which(!is.infinite(x))]$x)
rt_1 <- rt_seq[1]
rt_2 <- rt_seq[2]
rt_3 <- rt_seq[3]
#Just extract R_0 values
Rt_dt <- unique(subset(second_ovr_resulting_gamma_dt, gamma == 0 & IND %in% c(4, 5, 6)))
Rt_seq <- Rt_dt$phi #R_0
second_ovr_resulting_gamma_dt[, IND:= factor(IND)]
second_R_r_plot <- ggplot(second_ovr_resulting_gamma_dt)+
geom_line(aes(x = gamma, y = phi, color = IND),
linewidth = 1.4)+
theme_bw()+
geom_line(data = second_ovr_tmp,
aes(x = x, y = y, color = IND),
linetype = 2,
linewidth = 1.4,
alpha = 0.4)+
geom_point(data= Rt_dt, aes(x = gamma, y = phi, color = IND),
size = 5)+
geom_point(data= Rt_dt, aes(x = r, y = gamma, color = IND),
size = 5)+
#Add r and R labels
annotate("text", x = rt_1, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[1], fontface = 3, vjust = -0.12)+
annotate("text", x = rt_2, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[2], fontface = 3, vjust = -0.12)+
annotate("text", x = rt_3, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[3], fontface = 3, vjust = -0.12)+
annotate("text", y = Rt_seq[1]+ 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[1], fontface = 3, vjust = -0.1)+
annotate("text", y = Rt_seq[2] + 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[2], fontface = 3, vjust = -0.1)+
annotate("text", y = Rt_seq[3]+ 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[3], fontface = 3, vjust = -0.1)+
labs(x = expression(gamma),
y = expression(phi ~ "(" * gamma ~ ")"))+
scale_color_manual(values = c("1" = green_pal[1],
"2" = green_pal[2],
"3" = green_pal[3]),
labels = labels)+
geom_hline(yintercept = 0, linetype = "solid", color = "black") +  # Add horizontal line at y=0
geom_vline(xintercept = 0, linetype = "solid", color = "black") +  # Add vertical line at x=0+
scale_y_continuous(limits = c(0,5.1), expand = c(0, 0),
breaks = seq(0, 5.0, by = 1.0),
labels = label_number(accuracy = 0.1)) +
annotate("text", x = 1.25, 4.0, size = 11, label = expression(mu ~ "= 0.125"),
color = "darkblue", fontface = 3)+
theme(text = element_text(size = 28),
axis.text.x = element_text(size=28),
axis.text.y = element_text(size=28),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
legend.title = element_blank(),
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_blank(),
axis.title=element_text(size=28),
legend.text=element_text(size=28)+geom_text(size = 28),
legend.position = "bottom",legend.key.size = unit(3.5, 'cm'))+
guides(color = guide_legend(nrow =1))
print("Error here?")
top_panel_plot <- ggarrange(plotlist = list(NULL, NULL,
first_R_r_plot,
second_R_r_plot),
common.legend = TRUE,
legend = "bottom",
labels = c("(A)", "(B)", "", ""),
heights = c(0.1, 0.95),
font.label = list(size = 34, face = "bold"),
nrow = 2, ncol = 2)
return(top_panel_plot)
}
tar_source()
#Data = fortaleza, sao jao, singapore, fortaleza, simulated
list(
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal))
)
tar_make()
ovr_resulting_R_r_sample_dt <- readRDS(file = file.path(dengue.rt.out.simulations.dir,
"ovr_resulting_R_r_sample_dt.RDS"))
ovr_resulting_R_r_sample_dt
ovr_resulting_gamma_dt <- readRDS(file = file.path(dengue.rt.out.simulations.dir,
"ovr_resulting_gamma_dt.RDS"))
ovr_resulting_gamma_dt
tmp <- unique(subset(ovr_resulting_gamma_dt,
select = c("r", "IND")))
setkeyv(tmp, "IND")
ovr_tmp <- NULL
for(i in 1:nrow(tmp)){
tmp2 <- data.table(x = c(-Inf, tmp$r[i], tmp$r[i]),
y = c(1, 1, 0))
# tmp2 <- data.table(x = c(-Inf, tmp$r[i], tmp$r[i]),
#                    y = c(tmp$phi_plot_r[i], tmp$phi_plot_r[i], -Inf))
#
tmp2[, IND:= factor(i)]
ovr_tmp <- rbind(ovr_tmp, tmp2)
}
ovr_tmp
first_ovr_resulting_gamma_dt <- subset(ovr_resulting_gamma_dt, IND %in% c(1, 2, 3))
first_ovr_tmp <- subset(ovr_tmp, IND %in% c(1, 2, 3))
tmp_rt_seq <- unique(first_ovr_tmp[which(!is.infinite(x))]$x)
tmp_Rt_dt <- unique(subset(first_ovr_resulting_gamma_dt, gamma == 0 & IND %in% c(1, 2, 3)))
tmp_Rt_dt
tmp_Rt_seq <- tmp_Rt_dt$phi
tmp_Rt_seq
tmp_rt_1 <- tmp_rt_seq[1]
(tmp_rt_1)[1]
tmp_rt_2 <- tmp_rt_seq[2]
tmp_rt_3 <- tmp_rt_seq[3]
# rt_list <- list(r1 = tmp_rt_seq[1],
#                 r2 = tmp_rt_seq[2],
#                 r3 = tmp_rt_seq[3])
labels <- c("1" = expression(lambda["E"] ~ "= 0.5" * ", "* lambda["M"] ~ "= 0.5"),
"2" = expression(lambda["E"] ~ "= 0.75" * ", "* lambda["M"] ~ "= 0.75"),
"3" = expression(lambda["E"] ~ "= 1.0" * ", "* lambda["M"] ~ "= 1.0"))
first_R_r_plot <- ggplot(first_ovr_resulting_gamma_dt)+
geom_line(aes(x = gamma, y = phi, color = IND),
linewidth = 1.4)+
theme_bw()+
geom_line(data = first_ovr_tmp,
aes(x = x, y = y, color = IND),
linetype = 2,
linewidth = 1.4,
alpha = 0.4)+
geom_point(data= tmp_Rt_dt, aes(x = gamma, y = phi, color = IND),
size = 5)+
geom_point(data= tmp_Rt_dt, aes(x = r, y = gamma, color = IND),
size = 5)+
#Add r and R labels
annotate("text", x = tmp_rt_1, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[1], fontface = 3, vjust = -0.12)+
annotate("text", x = tmp_rt_2, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[2], fontface = 3, vjust = -0.12)+
annotate("text", x = tmp_rt_3, y= 0.025, size = 12,
label = expression(r) ,
color = green_pal[3], fontface = 3, vjust = -0.12)+
annotate("text", y = tmp_Rt_seq[1]+ 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[1], fontface = 3, vjust = -0.1)+
annotate("text", y = tmp_Rt_seq[2] + 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[2], fontface = 3, vjust = -0.1)+
annotate("text", y = tmp_Rt_seq[3]+ 0.005, x= 0.025, size = 12,
label = expression(R[0]) ,
color = green_pal[3], fontface = 3, vjust = -0.1)+
labs(x = expression(gamma),
y = expression(phi ~ "(" * gamma ~ ")"))+
scale_color_manual(values = c("1" = green_pal[1],
"2" = green_pal[2],
"3" = green_pal[3]),
labels = labels)+
geom_hline(yintercept = 0, linetype = "solid", color = "black") +  # Add horizontal line at y=0
geom_vline(xintercept = 0, linetype = "solid", color = "black") +  # Add vertical line at x=0+
scale_y_continuous(limits = c(0,5.1), expand = c(0, 0),
breaks = seq(0, 5.0, by = 1.0),
labels = label_number(accuracy = 0.1)) +
annotate("text", x = 1.25, 4.0, size = 11, label = expression(mu ~ "= 0.025"),
color = "darkblue", fontface = 3)+
theme(text = element_text(size = 28),
axis.text.x = element_text(size=28),
axis.text.y = element_text(size=28),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
legend.title = element_blank(),
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_blank(),
axis.title=element_text(size=28),
legend.text=element_text(size=28)+geom_text(size = 28),
legend.position = "bottom",legend.key.size = unit(3.5, 'cm'))+
guides(color = guide_legend(nrow =1))
first_R_r_plot
tar_read(ovr_gamma_dt)
ovr_resulting_gamma_dt
tar_source()
tar_make()
tar_make()
tar_source()
#Data = fortaleza, sao jao, singapore, fortaleza, simulated
list(
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal))
)
tar_make()
tar_source()
tar_make()
tar_source()
tar_make()
tar_read(top_panel_plot)
list(
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal)),
tar_target(mus_R_r_plot, R_r_mu_varying_plot_function())
)
tar_make()
list(
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal)),
tar_target(mus_R_r_plot, R_r_mu_varying_plot_function()),
tar_target(R_r_relationship_lambda_m_plot, R_r_lambda_m_varying_plot_function())
)
tar_make()
list(
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal)),
tar_target(mus_R_r_plot, R_r_mu_varying_plot_function()),
tar_target(R_r_relationship_lambda_m_plot, R_r_lambda_m_varying_plot_function())
)
tar_source()
list(
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal)),
tar_target(mus_R_r_plot, R_r_mu_varying_plot_function()),
tar_target(R_r_relationship_lambda_m_plot, R_r_lambda_m_varying_plot_function())
)
tar_make()
tar_read(blue_pal)
tar_read(green_pal)
tar_source()
list(
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal)),
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(mus_R_r_plot, R_r_mu_varying_plot_function()),
tar_target(R_r_relationship_lambda_m_plot, R_r_lambda_m_varying_plot_function())
)
tar_make()
list(
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal)),
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(mus_R_r_plot, R_r_mu_varying_plot_function()),
tar_target(R_r_relationship_lambda_m_plot, R_r_lambda_m_varying_plot_function())
)
tar_source()
tar_make()
tar_source()
#Data = fortaleza, sao jao, singapore, fortaleza, simulated
list(
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal)),
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(mus_R_r_plot, R_r_mu_varying_plot_function(blue_pal)),
tar_target(R_r_relationship_lambda_m_plot, R_r_lambda_m_varying_plot_function())
)
tar_make()
list(
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal)),
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(mus_R_r_plot, R_r_mu_varying_plot_function(blue_pal)),
tar_target(R_r_relationship_lambda_m_plot, R_r_lambda_m_varying_plot_function(blue_pal))
)
tar_make()
tar_source()
list(
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal)),
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(mus_R_r_plot, R_r_mu_varying_plot_function(blue_pal)),
tar_target(R_r_relationship_lambda_m_plot, R_r_lambda_m_varying_plot_function(blue_pal))
)
tar_make()
list(
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal)),
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(mus_R_r_plot, R_r_mu_varying_plot_function(blue_pal)),
tar_target(R_r_relationship_lambda_m_plot, R_r_lambda_m_varying_plot_function(blue_pal)),
tar_target(plot_four_panel_figure_two(top_panel_plot,
mus_R_r_plot,
R_r_relationship_lambda_m_plot))
)
list(
tar_target(green_pal, green_palette_setup_function()),
tar_target(ovr_gamma_dt, R_r_relationship_exponential_diff_lambdas()),
tar_target(top_panel_plot, process_and_plot_R_r_relationship(ovr_gamma_dt, green_pal)),
tar_target(blue_pal, blue_palette_setup_function()),
tar_target(mus_R_r_plot, R_r_mu_varying_plot_function(blue_pal)),
tar_target(R_r_relationship_lambda_m_plot, R_r_lambda_m_varying_plot_function(blue_pal)),
tar_target(R_r_analytical_plot_two_panels, plot_four_panel_figure_two(top_panel_plot,
mus_R_r_plot,
R_r_relationship_lambda_m_plot))
)
tar_make()
